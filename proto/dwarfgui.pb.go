// Code generated by protoc-gen-go.
// source: dwarfgui.proto
// DO NOT EDIT!

/*
Package dwarfgui is a generated protocol buffer package.

It is generated from these files:
	dwarfgui.proto
	test.proto

It has these top-level messages:
	InventoryRequest
	InventoryItem
	InventoryReply
	EquipmentSlotsRequest
	EquipmentSlotsReply
	InventoryEquipRequest
	InventoryEquipReply
	InventoryMoveRequest
	InventoryMoveReply
	Test
*/
package dwarfgui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type InventoryRequest struct {
	UnitId           *int32 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *InventoryRequest) Reset()                    { *m = InventoryRequest{} }
func (m *InventoryRequest) String() string            { return proto.CompactTextString(m) }
func (*InventoryRequest) ProtoMessage()               {}
func (*InventoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InventoryRequest) GetUnitId() int32 {
	if m != nil && m.UnitId != nil {
		return *m.UnitId
	}
	return 0
}

type InventoryItem struct {
	Container        *bool            `protobuf:"varint,1,req,name=container" json:"container,omitempty"`
	Name             *string          `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Id               *int32           `protobuf:"varint,3,req,name=id" json:"id,omitempty"`
	Item             []*InventoryItem `protobuf:"bytes,4,rep,name=item" json:"item,omitempty"`
	Itemtype         *int32           `protobuf:"varint,5,opt,name=itemtype" json:"itemtype,omitempty"`
	IsFood           *bool            `protobuf:"varint,6,opt,name=is_food,json=isFood" json:"is_food,omitempty"`
	IsWeapon         *bool            `protobuf:"varint,7,opt,name=is_weapon,json=isWeapon" json:"is_weapon,omitempty"`
	IsArmor          *bool            `protobuf:"varint,8,opt,name=is_armor,json=isArmor" json:"is_armor,omitempty"`
	IsBox            *bool            `protobuf:"varint,9,opt,name=is_box,json=isBox" json:"is_box,omitempty"`
	IsBarrel         *bool            `protobuf:"varint,10,opt,name=is_barrel,json=isBarrel" json:"is_barrel,omitempty"`
	IsFlask          *bool            `protobuf:"varint,11,opt,name=is_flask,json=isFlask" json:"is_flask,omitempty"`
	IsLiquid         *bool            `protobuf:"varint,12,opt,name=is_liquid,json=isLiquid" json:"is_liquid,omitempty"`
	Mode             *int32           `protobuf:"varint,13,opt,name=mode" json:"mode,omitempty"`
	BodyPartId       *int32           `protobuf:"varint,14,opt,name=body_part_id,json=bodyPartId" json:"body_part_id,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *InventoryItem) Reset()                    { *m = InventoryItem{} }
func (m *InventoryItem) String() string            { return proto.CompactTextString(m) }
func (*InventoryItem) ProtoMessage()               {}
func (*InventoryItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InventoryItem) GetContainer() bool {
	if m != nil && m.Container != nil {
		return *m.Container
	}
	return false
}

func (m *InventoryItem) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *InventoryItem) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *InventoryItem) GetItem() []*InventoryItem {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *InventoryItem) GetItemtype() int32 {
	if m != nil && m.Itemtype != nil {
		return *m.Itemtype
	}
	return 0
}

func (m *InventoryItem) GetIsFood() bool {
	if m != nil && m.IsFood != nil {
		return *m.IsFood
	}
	return false
}

func (m *InventoryItem) GetIsWeapon() bool {
	if m != nil && m.IsWeapon != nil {
		return *m.IsWeapon
	}
	return false
}

func (m *InventoryItem) GetIsArmor() bool {
	if m != nil && m.IsArmor != nil {
		return *m.IsArmor
	}
	return false
}

func (m *InventoryItem) GetIsBox() bool {
	if m != nil && m.IsBox != nil {
		return *m.IsBox
	}
	return false
}

func (m *InventoryItem) GetIsBarrel() bool {
	if m != nil && m.IsBarrel != nil {
		return *m.IsBarrel
	}
	return false
}

func (m *InventoryItem) GetIsFlask() bool {
	if m != nil && m.IsFlask != nil {
		return *m.IsFlask
	}
	return false
}

func (m *InventoryItem) GetIsLiquid() bool {
	if m != nil && m.IsLiquid != nil {
		return *m.IsLiquid
	}
	return false
}

func (m *InventoryItem) GetMode() int32 {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return 0
}

func (m *InventoryItem) GetBodyPartId() int32 {
	if m != nil && m.BodyPartId != nil {
		return *m.BodyPartId
	}
	return 0
}

type InventoryReply struct {
	Available        *bool            `protobuf:"varint,1,req,name=available" json:"available,omitempty"`
	Changed          *bool            `protobuf:"varint,2,opt,name=changed" json:"changed,omitempty"`
	Item             []*InventoryItem `protobuf:"bytes,3,rep,name=item" json:"item,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *InventoryReply) Reset()                    { *m = InventoryReply{} }
func (m *InventoryReply) String() string            { return proto.CompactTextString(m) }
func (*InventoryReply) ProtoMessage()               {}
func (*InventoryReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *InventoryReply) GetAvailable() bool {
	if m != nil && m.Available != nil {
		return *m.Available
	}
	return false
}

func (m *InventoryReply) GetChanged() bool {
	if m != nil && m.Changed != nil {
		return *m.Changed
	}
	return false
}

func (m *InventoryReply) GetItem() []*InventoryItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type EquipmentSlotsRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *EquipmentSlotsRequest) Reset()                    { *m = EquipmentSlotsRequest{} }
func (m *EquipmentSlotsRequest) String() string            { return proto.CompactTextString(m) }
func (*EquipmentSlotsRequest) ProtoMessage()               {}
func (*EquipmentSlotsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type EquipmentSlotsReply struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *EquipmentSlotsReply) Reset()                    { *m = EquipmentSlotsReply{} }
func (m *EquipmentSlotsReply) String() string            { return proto.CompactTextString(m) }
func (*EquipmentSlotsReply) ProtoMessage()               {}
func (*EquipmentSlotsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type InventoryEquipRequest struct {
	UnitId           *int32 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	ItemId           *int32 `protobuf:"varint,2,req,name=item_id,json=itemId" json:"item_id,omitempty"`
	Mode             *int32 `protobuf:"varint,3,opt,name=mode" json:"mode,omitempty"`
	BodyPartId       *int32 `protobuf:"varint,4,opt,name=body_part_id,json=bodyPartId" json:"body_part_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *InventoryEquipRequest) Reset()                    { *m = InventoryEquipRequest{} }
func (m *InventoryEquipRequest) String() string            { return proto.CompactTextString(m) }
func (*InventoryEquipRequest) ProtoMessage()               {}
func (*InventoryEquipRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *InventoryEquipRequest) GetUnitId() int32 {
	if m != nil && m.UnitId != nil {
		return *m.UnitId
	}
	return 0
}

func (m *InventoryEquipRequest) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *InventoryEquipRequest) GetMode() int32 {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return 0
}

func (m *InventoryEquipRequest) GetBodyPartId() int32 {
	if m != nil && m.BodyPartId != nil {
		return *m.BodyPartId
	}
	return 0
}

type InventoryEquipReply struct {
	Success          *bool  `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *InventoryEquipReply) Reset()                    { *m = InventoryEquipReply{} }
func (m *InventoryEquipReply) String() string            { return proto.CompactTextString(m) }
func (*InventoryEquipReply) ProtoMessage()               {}
func (*InventoryEquipReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *InventoryEquipReply) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type InventoryMoveRequest struct {
	UnitId           *int32 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	ItemId           *int32 `protobuf:"varint,2,req,name=item_id,json=itemId" json:"item_id,omitempty"`
	DestinationId    *int32 `protobuf:"varint,3,req,name=destination_id,json=destinationId" json:"destination_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *InventoryMoveRequest) Reset()                    { *m = InventoryMoveRequest{} }
func (m *InventoryMoveRequest) String() string            { return proto.CompactTextString(m) }
func (*InventoryMoveRequest) ProtoMessage()               {}
func (*InventoryMoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *InventoryMoveRequest) GetUnitId() int32 {
	if m != nil && m.UnitId != nil {
		return *m.UnitId
	}
	return 0
}

func (m *InventoryMoveRequest) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *InventoryMoveRequest) GetDestinationId() int32 {
	if m != nil && m.DestinationId != nil {
		return *m.DestinationId
	}
	return 0
}

type InventoryMoveReply struct {
	Success          *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Error            *string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *InventoryMoveReply) Reset()                    { *m = InventoryMoveReply{} }
func (m *InventoryMoveReply) String() string            { return proto.CompactTextString(m) }
func (*InventoryMoveReply) ProtoMessage()               {}
func (*InventoryMoveReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *InventoryMoveReply) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *InventoryMoveReply) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*InventoryRequest)(nil), "dwarfgui.InventoryRequest")
	proto.RegisterType((*InventoryItem)(nil), "dwarfgui.InventoryItem")
	proto.RegisterType((*InventoryReply)(nil), "dwarfgui.InventoryReply")
	proto.RegisterType((*EquipmentSlotsRequest)(nil), "dwarfgui.EquipmentSlotsRequest")
	proto.RegisterType((*EquipmentSlotsReply)(nil), "dwarfgui.EquipmentSlotsReply")
	proto.RegisterType((*InventoryEquipRequest)(nil), "dwarfgui.InventoryEquipRequest")
	proto.RegisterType((*InventoryEquipReply)(nil), "dwarfgui.InventoryEquipReply")
	proto.RegisterType((*InventoryMoveRequest)(nil), "dwarfgui.InventoryMoveRequest")
	proto.RegisterType((*InventoryMoveReply)(nil), "dwarfgui.InventoryMoveReply")
}

var fileDescriptor0 = []byte{
	// 490 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x53, 0x5d, 0x6b, 0xdb, 0x30,
	0x14, 0xa5, 0x76, 0x9c, 0xd8, 0xb7, 0x4d, 0x18, 0x6a, 0x43, 0xb4, 0x8f, 0x87, 0x60, 0x18, 0x04,
	0x0a, 0x1d, 0xec, 0x1f, 0x2c, 0x6c, 0x65, 0x81, 0x0d, 0x86, 0xf7, 0xb0, 0x47, 0xa3, 0xc4, 0x4a,
	0x27, 0x66, 0x4b, 0xae, 0x24, 0xa7, 0xcd, 0xd3, 0x7e, 0xc1, 0xfe, 0xf3, 0xae, 0x34, 0xdb, 0xed,
	0x32, 0xc8, 0xc6, 0x9e, 0xa2, 0x73, 0x8f, 0xee, 0xd1, 0xf1, 0x3d, 0x37, 0x30, 0x29, 0xee, 0x98,
	0xde, 0xde, 0x34, 0xe2, 0xaa, 0xd6, 0xca, 0x2a, 0x12, 0x77, 0x38, 0xbd, 0x84, 0x27, 0x2b, 0xb9,
	0xe3, 0xd2, 0x2a, 0xbd, 0xcf, 0xf8, 0x6d, 0xc3, 0x8d, 0x25, 0x33, 0x18, 0x35, 0x52, 0xd8, 0x5c,
	0x14, 0xf4, 0x64, 0x7e, 0xb2, 0x88, 0xb2, 0xa1, 0x83, 0xab, 0x22, 0xfd, 0x11, 0xc2, 0xb8, 0xbf,
	0xbd, 0xb2, 0xbc, 0x22, 0x2f, 0x20, 0xd9, 0x28, 0x69, 0x99, 0x90, 0x5c, 0xe3, 0xe5, 0x60, 0x11,
	0x67, 0x0f, 0x05, 0x42, 0x60, 0x20, 0x59, 0xc5, 0x69, 0x80, 0x44, 0x92, 0xf9, 0x33, 0x99, 0x40,
	0x80, 0xba, 0x21, 0x56, 0xa2, 0x0c, 0x4f, 0xe4, 0x12, 0x06, 0x02, 0x95, 0xe8, 0x60, 0x1e, 0x2e,
	0x4e, 0x5f, 0xcf, 0xae, 0x7a, 0xa7, 0xbf, 0x3d, 0x94, 0xf9, 0x4b, 0xe4, 0x19, 0xc4, 0xee, 0xd7,
	0xee, 0x6b, 0x4e, 0x23, 0x6f, 0xad, 0xc7, 0xce, 0xb5, 0x30, 0xf9, 0x56, 0xa9, 0x82, 0x0e, 0x91,
	0x8a, 0xb3, 0xa1, 0x30, 0xd7, 0x88, 0xc8, 0x73, 0x48, 0x90, 0xb8, 0xe3, 0xac, 0x56, 0x92, 0x8e,
	0x3c, 0x15, 0x0b, 0xf3, 0xc5, 0x63, 0xf2, 0x14, 0x15, 0x4d, 0xce, 0x74, 0xa5, 0x34, 0x8d, 0x3d,
	0x87, 0x2a, 0x6f, 0x1c, 0x24, 0x53, 0x40, 0x85, 0x7c, 0xad, 0xee, 0x69, 0xe2, 0x89, 0x48, 0x98,
	0xa5, 0xba, 0x6f, 0xe5, 0xd6, 0x4c, 0x6b, 0x5e, 0x52, 0xe8, 0xe4, 0x96, 0x1e, 0xb7, 0x72, 0xdb,
	0x92, 0x99, 0x6f, 0xf4, 0xb4, 0x93, 0xbb, 0x76, 0xb0, 0xed, 0x2b, 0xc5, 0x6d, 0x83, 0xdf, 0x7f,
	0xd6, 0xf5, 0x7d, 0xf0, 0xd8, 0x4d, 0xaa, 0x52, 0x05, 0xa7, 0x63, 0xff, 0x51, 0xfe, 0x4c, 0xe6,
	0x70, 0xb6, 0x56, 0xc5, 0x3e, 0xaf, 0x99, 0xf6, 0x59, 0x4c, 0x3c, 0x07, 0xae, 0xf6, 0x09, 0x4b,
	0x98, 0x47, 0x03, 0x93, 0x47, 0xe1, 0xd5, 0xe5, 0xde, 0xe5, 0xc1, 0x76, 0x4c, 0x94, 0x6c, 0x5d,
	0xf2, 0x2e, 0x8f, 0xbe, 0x40, 0x28, 0x8c, 0x36, 0x5f, 0x99, 0xbc, 0xe1, 0x05, 0x46, 0xe2, 0xcd,
	0xb5, 0xb0, 0x4f, 0x21, 0xfc, 0x87, 0x14, 0xd2, 0x19, 0x4c, 0xdf, 0xa1, 0xeb, 0xba, 0x42, 0xe6,
	0x73, 0xa9, 0xac, 0x69, 0x17, 0x27, 0x9d, 0xc2, 0xf9, 0x21, 0x81, 0xa6, 0xd2, 0xef, 0x30, 0xed,
	0x65, 0x3c, 0xff, 0xb7, 0x45, 0xf3, 0x59, 0xe2, 0x4b, 0x8e, 0x08, 0xfc, 0xa6, 0x0c, 0x1d, 0x5c,
	0x3d, 0xcc, 0x29, 0x3c, 0x32, 0xa7, 0xc1, 0x1f, 0x73, 0x7a, 0x05, 0xe7, 0x87, 0x06, 0xdc, 0xb0,
	0x70, 0x1c, 0xa6, 0xd9, 0x6c, 0xb8, 0x31, 0xed, 0xa8, 0x3a, 0x98, 0x2a, 0xb8, 0xe8, 0x1b, 0x3e,
	0xaa, 0x1d, 0xff, 0x7f, 0xc3, 0x2f, 0xf1, 0xbf, 0x87, 0x9d, 0x42, 0x32, 0x2b, 0x94, 0xcc, 0xfb,
	0xd5, 0x1f, 0x3f, 0xaa, 0xa2, 0xc3, 0xb7, 0x40, 0x0e, 0x1e, 0x3c, 0x6a, 0x90, 0x5c, 0x40, 0xc4,
	0xb5, 0xc6, 0x9d, 0x75, 0x39, 0x26, 0xd9, 0x2f, 0xb0, 0x0c, 0xde, 0x87, 0x3f, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x37, 0xea, 0xbc, 0x2b, 0xeb, 0x03, 0x00, 0x00,
}
